{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux'; // allows ajax requests on the fly\n// import Axios from 'axios';\n// this collects/imports all of the actions that have been exported from 'state/index.js' \n\nimport { actionCreators } from './state/index';\nimport AppWrapper from './components/appWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // can reference state like this to return all key values\n  // const state = useSelector( (state) => state);\n  console.log(state); //or return state.reducerName eg. 'state.account' to see that value alone returned\n\n  const form = useSelector(state => state.form);\n  const bank = useSelector(state => state.bank);\n  const users = useSelector(state => state.users);\n  console.log('rendered : form => ', form, '\\n bank => ', bank, '\\n users => ', users);\n  const dispatch = useDispatch(); // can call all of the actionCreators like this\n\n  const ActionCreators = bindActionCreators(actionCreators, dispatch); //or can call them in a destructured format\n\n  const {\n    newTransaction,\n    depositMoney,\n    withdrawMoney\n  } = bindActionCreators(actionCreators, dispatch);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AppWrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"sYOk9GrQ/SdGZ+LybBym+cU638M=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/App.js"],"names":["useEffect","useState","useSelector","useDispatch","bindActionCreators","actionCreators","AppWrapper","App","console","log","state","form","bank","users","dispatch","ActionCreators","newTransaction","depositMoney","withdrawMoney"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;AACA;AAEA;;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAGd;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EALc,CAOd;;AACA,QAAMC,IAAI,GAAGT,WAAW,CAAGQ,KAAD,IAAWA,KAAK,CAACC,IAAnB,CAAxB;AACA,QAAMC,IAAI,GAAGV,WAAW,CAAGQ,KAAD,IAAWA,KAAK,CAACE,IAAnB,CAAxB;AACA,QAAMC,KAAK,GAAGX,WAAW,CAAGQ,KAAD,IAAWA,KAAK,CAACG,KAAnB,CAAzB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,IAAnC,EAAyC,aAAzC,EAAwDC,IAAxD,EAA8D,cAA9D,EAA8EC,KAA9E;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CAZc,CAcd;;AACA,QAAMY,cAAc,GAAGX,kBAAkB,CAACC,cAAD,EAAiBS,QAAjB,CAAzC,CAfc,CAkBd;;AACA,QAAM;AAACE,IAAAA,cAAD;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA;AAA/B,MAAiDd,kBAAkB,CAACC,cAAD,EAAiBS,QAAjB,CAAzE;AAMA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;GA9BQP,G;UAQKL,W,EACAA,W,EACCA,W,EAEGC,W;;;KAZTI,G;AAgCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// allows ajax requests on the fly\n// import Axios from 'axios';\n\n// this collects/imports all of the actions that have been exported from 'state/index.js' \nimport { actionCreators } from './state/index';\n\n\nimport AppWrapper from './components/appWrapper';\n\nfunction App() {\n\n\n\t// can reference state like this to return all key values\n\t// const state = useSelector( (state) => state);\n\tconsole.log(state);\n\n\t//or return state.reducerName eg. 'state.account' to see that value alone returned\n\tconst form = useSelector( (state) => state.form );\n\tconst bank = useSelector( (state) => state.bank );\n\tconst users = useSelector(\t(state) => state.users );\n\tconsole.log('rendered : form => ', form, '\\n bank => ', bank, '\\n users => ', users);\n\tconst dispatch = useDispatch();\n\n\t// can call all of the actionCreators like this\n\tconst ActionCreators = bindActionCreators(actionCreators, dispatch);\n\n\n\t//or can call them in a destructured format\n\tconst {newTransaction, depositMoney, withdrawMoney } = bindActionCreators(actionCreators, dispatch);\n\n\n\n\t\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AppWrapper/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}