{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/components/usersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersList = () => {\n  _s();\n\n  // useEffect = \n  const dispatch = useDispatch(); // setting up actionCreators to fetchusers and update global state instead of typing i tlong way\n  // const ActionCreators = bindActionCreators(actionCreators, dispatch);\n\n  const {\n    fetchUsers\n  } = bindActionCreators(actionCreators, dispatch); // fetchUsers();\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const usersfromserver = await fetchUsers();\n      console.log('users from the server =>', usersfromserver);\n    };\n\n    getUsers();\n  }, []); // const users = useSelector(\t(state) => state.users);\n  // console.log('userList component => ', users)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userList--title\",\n      children: \"users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UsersList, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/components/usersList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","bindActionCreators","actionCreators","UsersList","dispatch","fetchUsers","getUsers","usersfromserver","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEvB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAHuB,CAIvB;AACA;;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAiBJ,kBAAkB,CAACC,cAAD,EAAiBE,QAAjB,CAAzC,CANuB,CAOvB;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACT,UAAMQ,QAAQ,GAAI,YAAY;AAC1B,YAAMC,eAAe,GAAG,MAAMF,UAAU,EAAxC;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,eAAxC;AACM,KAHD;;AAIAD,IAAAA,QAAQ;AACX,GANK,EAMH,EANG,CAAT,CATuB,CAiBvB;AACA;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA,2BACC;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CArCD;;GAAMH,S;UAGYH,W;;;KAHZG,S;AAuCN,eAAeA,SAAf","sourcesContent":["import React, {\tuseState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\n\nconst UsersList = () => {\n\n\t// useEffect = \n\tconst dispatch = useDispatch();\n\t// setting up actionCreators to fetchusers and update global state instead of typing i tlong way\n\t// const ActionCreators = bindActionCreators(actionCreators, dispatch);\n\tconst { fetchUsers } = bindActionCreators(actionCreators, dispatch);\n\t// fetchUsers();\n\n\tuseEffect(() => {\n        const getUsers  = async () => {\n            const usersfromserver = await fetchUsers();\n\t\t\tconsole.log('users from the server =>', usersfromserver);\n        }\n        getUsers();\n    }, []);\n\t\n\t// const users = useSelector(\t(state) => state.users);\n\t// console.log('userList component => ', users)\n\n\treturn (\n\t\t<div className = \"userList\">\n\t\t\t<span className=\"userList--title\">users</span>\n\t\t\t{/* { users.map((user) => (\n\t\t\t\t<>\n\t\t\t\t\t<span key={user.id}>{user.name}</span>\n\t\t\t\t</>\n\t\t\t))} */}\n\n\n\t\t\t{/* {users.map((u) => (\n\t\t\t\t<>\n\t\t\t\t\t<span key={u.id}>{u.name}</span>\n\t\t\t\t</>\n\t\t\t))} */}\n\t\t</div>\n\t)\n}\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}