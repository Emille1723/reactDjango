{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [amount, setAmount] = useState(\"\");\n  const [transaction, setTransaction] = useState(\"\");\n  const [deposit, setDeposit] = useState(false);\n  const [withdraw, setWithdraw] = useState(false);\n  const submittedData = {\n    amount: '',\n    transactionType: ''\n  };\n  const {\n    newTransaction\n  } = bindActionCreators(actionCreators, dispatch);\n  const isSelect = useSelector(state => state.user.isSelected);\n  const user = useSelector(state => state.user.payload);\n  console.log(user, 'from form.js'); // const handleChange = () => {\n  // \tsetData(prev => ({...prev, [e.target.name]: [e.target.value]}))\n  // }\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    submittedData.amount = amount;\n    submittedData.transactionType = 'some transaction value bruv';\n    setAmount('');\n    setDeposit(false);\n    setWithdraw(false);\n    setTransaction('');\n    newTransaction(submittedData); // formActivity();\n  };\n\n  const handleRadios = evt => {\n    evt.preventDefault();\n  }; // const formActivity = () => {\n  // \tdispatch({\n  // \t\ttype : 'NEW_TRANSACTION',\n  // \t\tpayload : submittedData\n  // \t});\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form--title\",\n      children: \"banking transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), isSelect ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form--selected--user\",\n      children: [\"account selected : \", user.firstName, \" \", user.lastName, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 64\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 70\n      }, this), \"  current balance \", user.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form--selected--user\",\n      children: \"select an account to continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form--input--wrapper\",\n      name: \"text\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form--input\",\n        value: amount,\n        onChange: evt => setAmount(evt.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form--input--label\",\n        children: \"amount to be tendered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form--input--wrapper\",\n      name: \"radio\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"form--input\",\n        name: \"radios\",\n        id: \"radio--deposit\" // checked = {deposit}\n        // value = {deposit}\n        ,\n        onChange: evt => setDeposit(evt.currentTarget.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio--deposit\",\n        className: \"form--input--label\",\n        children: \"deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"form--input\",\n        name: \"radios\",\n        id: \"radio--withdraw\" // checked = {withdraw}\n        // value = {withdraw}\n        ,\n        onChange: evt => setWithdraw(evt.currentTarget.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio--withdraw\",\n        className: \"form--input--label\",\n        children: \"withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"form--submit\",\n      value: \"complete transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Form, \"eStrOW7ivbk/hHVPS7dcSieQCAM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/components/form.js"],"names":["React","useState","useSelector","useDispatch","bindActionCreators","actionCreators","Form","dispatch","amount","setAmount","transaction","setTransaction","deposit","setDeposit","withdraw","setWithdraw","submittedData","transactionType","newTransaction","isSelect","state","user","isSelected","payload","console","log","handleSubmit","evt","preventDefault","handleRadios","firstName","lastName","target","value","currentTarget","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\n\n\n\n\nconst Form = () => {\n\tconst dispatch = useDispatch();\n\tconst [amount, setAmount] = useState(\"\");\n\tconst [transaction, setTransaction] = useState(\"\");\n\tconst [deposit, setDeposit] = useState(false);\n\tconst [withdraw, setWithdraw] = useState(false);\n\n\tconst submittedData = {\n\t\tamount : '',\n\t\ttransactionType : '',\n\t};\n\n\tconst { newTransaction } = bindActionCreators(actionCreators, dispatch);\n\n\tconst isSelect = useSelector( (state) => state.user.isSelected );\n\tconst user = useSelector( (state) => state.user.payload );\n\tconsole.log(user, 'from form.js');\n\n\n\t// const handleChange = () => {\n\t// \tsetData(prev => ({...prev, [e.target.name]: [e.target.value]}))\n\t// }\n\n\tconst handleSubmit = evt => {\n\t\tevt.preventDefault();\n\t\tsubmittedData.amount = amount;\n\t\tsubmittedData.transactionType = 'some transaction value bruv';\n\n\n\t\tsetAmount('');\n\t\tsetDeposit(false);\n\t\tsetWithdraw(false);\n\t\tsetTransaction('');\n\t\tnewTransaction(submittedData);\n\n\t\t// formActivity();\n\t}\n\n\tconst handleRadios = evt => {\n\t\tevt.preventDefault();\n\t}\n\n\t// const formActivity = () => {\n\t// \tdispatch({\n\t// \t\ttype : 'NEW_TRANSACTION',\n\t// \t\tpayload : submittedData\n\t// \t});\n\t// }\n\n\treturn (\n\t\t<form className=\"form\" onSubmit={handleSubmit}>\n\t\t\t<span className=\"form--title\">banking transactions</span>\n\t\t\t{isSelect \n\t\t\t?(\t<span className=\"form--selected--user\">\n\t\t\t \t\taccount selected : { user.firstName\t} {\tuser.lastName }  <br/> <br/>  current balance { user.amount }\n\t\t\t\t</span>)\n\t\t\t: (\n\t\t\t\t<span className=\"form--selected--user\">\n\t\t\t \t\tselect an account to continue\n\t\t\t\t</span>\n\t\t\t)};\n\t\t\t<div className=\"form--input--wrapper\" name=\"text\">\n\t\t\t\t<input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tclassName=\"form--input\"\n\t\t\t\t\tvalue = {amount}\n\t\t\t\t\tonChange = { (evt) => setAmount(evt.target.value) } \n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<label className=\"form--input--label\">amount to be tendered</label>\n\t\t\t</div>\n\t\t\t<div className=\"form--input--wrapper\" name=\"radio\">\n\t\t\t\t<input \n\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\tclassName=\"form--input\"\n\t\t\t\t\tname=\"radios\"\n\t\t\t\t\tid=\"radio--deposit\"\n\t\t\t\t\t// checked = {deposit}\n\t\t\t\t\t// value = {deposit}\n\t\t\t\t\tonChange = {(evt) => setDeposit(evt.currentTarget.checked)}\n\t\t\t\t/>\n\t\t\t\t<label \n\t\t\t\t\thtmlFor=\"radio--deposit\" \n\t\t\t\t\tclassName=\"form--input--label\">deposit</label>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\tclassName=\"form--input\" \n\t\t\t\t\tname=\"radios\"\n\t\t\t\t\tid=\"radio--withdraw\"\n\t\t\t\t\t// checked = {withdraw}\n\t\t\t\t\t// value = {withdraw}\n\t\t\t\t\tonChange = {(evt) => setWithdraw(evt.currentTarget.checked)}\n\t\t\t\t/>\n\t\t\t\t<label \n\t\t\t\t\thtmlFor=\"radio--withdraw\" \n\t\t\t\t\tclassName=\"form--input--label\">withdraw</label>\n\t\t\t</div>\n\t\t\t<input type=\"submit\" className=\"form--submit\" value=\"complete transaction\"/>\n\t\t</form>\n\t)\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}