{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/components/usersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UsersList = () => {\n  _s();\n\n  const colours = [{\n    id: 0,\n    colour: '#ff8a80'\n  }, {\n    id: 1,\n    colour: '#26a69a'\n  }, {\n    id: 2,\n    colour: '#ab47bc'\n  }, {\n    id: 3,\n    colour: '#9575cd'\n  }, {\n    id: 4,\n    colour: '#03a9f4'\n  }, {\n    id: 5,\n    colour: '#607d8b'\n  }]; // useEffect = \n\n  const dispatch = useDispatch(); // setting up actionCreators to fetchusers and update global state instead of typing i tlong way\n  // const ActionCreators = bindActionCreators(actionCreators, dispatch);\n\n  const {\n    selectUser,\n    fetchUsers,\n    loadUsers\n  } = bindActionCreators(actionCreators, dispatch);\n  useEffect(() => {\n    const getUsers = async () => {\n      const usersfromserver = await fetchUsers();\n    };\n\n    getUsers();\n  }, []);\n\n  const handleChange = evt => {\n    const {\n      id\n    } = evt.target; // console.log('id => ', id);\n\n    fetchUser(id);\n  };\n\n  const fetchUser = id => async (id, dispatch) => {\n    const res = await fetch(`http://localhost:5000/people/${id}`);\n    const user = await res.json(); // dispatch(selectUser(user));\n\n    console.log(user);\n  };\n\n  const users = useSelector(state => state.users.users);\n  console.log('userList component => ', users);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userList--title\",\n      children: \"users listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userList--item--wrapper\",\n      children: users.map((user, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"userList--radios\",\n          id: user.id,\n          type: \"radio\",\n          name: \"radios\",\n          onChange: handleChange\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: user.id,\n          className: \"userList--item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userList--item--image\",\n            style: {\n              borderColor: colours[i].colour\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userList--item--name\",\n            children: [user.firstName, \" \", user.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userList--item--amount\",\n            children: [\"$\", user.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userList--item--lastWorked\",\n            children: [\"last worked : \", user.lastWorked]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"userList--item--selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 8\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UsersList, \"BS7bVd8xaVNZdIWuKRUCDf4R6os=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/components/usersList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","bindActionCreators","actionCreators","UsersList","colours","id","colour","dispatch","selectUser","fetchUsers","loadUsers","getUsers","usersfromserver","handleChange","evt","target","fetchUser","res","fetch","user","json","console","log","users","state","map","i","borderColor","firstName","lastName","amount","lastWorked"],"mappings":"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","sourcesContent":["import React, {\tuseState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\n\nconst UsersList = () => {\n\n\t\n\n\tconst colours = [\n        {\n            id:0,\n            colour : '#ff8a80'\n        },\n        {\n            id:1,\n            colour : '#26a69a'\n        },\n        {\n            id:2,\n            colour : '#ab47bc'\n        },\n        {\n            id:3,\n            colour : '#9575cd'\n        },\n        {\n            id:4,\n            colour : '#03a9f4'\n        },\n        {\n            id:5,\n            colour : '#607d8b'\n        },\n    ];\n\t\n\t// useEffect = \n\tconst dispatch = useDispatch();\n\t// setting up actionCreators to fetchusers and update global state instead of typing i tlong way\n\t// const ActionCreators = bindActionCreators(actionCreators, dispatch);\n\tconst { selectUser, fetchUsers, loadUsers } = bindActionCreators(actionCreators, dispatch);\n\n\tuseEffect(() => {\n        const getUsers  = async () => {\n            const usersfromserver = await fetchUsers();\n        }\n        getUsers();\n    }, []);\n\n\n\n\tconst handleChange = (evt) => {\n\t\tconst { id } = evt.target;\n\t\t// console.log('id => ', id);\n\t\tfetchUser(id);\n\t}\n\n\tconst fetchUser = (id) => async (id, dispatch) => {\n\t\tconst res = await fetch(`http://localhost:5000/people/${id}`);\n\t\tconst user = await res.json();\n\n\t\t// dispatch(selectUser(user));\n\n\n\t\tconsole.log(user);\n\t\t\n\t}\n\n\tconst users = useSelector(\t(state) => state.users.users);\n\tconsole.log('userList component => ', users);\n\n\n\t\n\treturn (\n\t\t<div className = \"userList\">\n\t\t\t<span className=\"userList--title\">users listing</span>\n\t\t\t<div className=\"userList--item--wrapper\">\n\t\t\t\t{ users.map((user,i) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<input className=\"userList--radios\"\n\t\t\t\t\t\t\tkey={user.id}  \n\t\t\t\t\t\t\tid = {user.id} \n\t\t\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\t\t\tname=\"radios\"\n\t\t\t\t\t\t\tonChange = {handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label key={i} htmlFor={user.id} className=\"userList--item\">\n\t\t\t\t\t\t\t<span className=\"userList--item--image\" style={{borderColor:colours[i].colour}}>\n\t\t\t\t\t\t\t\t<i></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"userList--item--name\">\n\t\t\t\t\t\t\t\t{user.firstName} {user.lastName}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"userList--item--amount\">\n\t\t\t\t\t\t\t\t${user.amount}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"userList--item--lastWorked\">\n\t\t\t\t\t\t\t\tlast worked : {user.lastWorked}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<i className=\"userList--item--selected\"></i>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}