{"ast":null,"code":"const intialState = {\n  users: []\n};\n\nconst reducer = (state = intialState, action) => {\n  // destructured action object\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"FETCHED_USERS\":\n      return { ...state,\n        users: [...state.users, payload]\n      };\n    // return state, {\n    // \t\tusers : payload\n    // \t};\t\n\n    default:\n      return state;\n  }\n};\n\nconst fetchUsers = () => async (dispatch, getState) => {\n  const url = 'http://localhost:5000/people';\n  const users = await fetch(url).then(res => res.json());\n  dispatch(loadUsers(users));\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/state/reducers/usersReducer.js"],"names":["intialState","users","reducer","state","action","type","payload","fetchUsers","dispatch","getState","url","fetch","then","res","json","loadUsers"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AACnBC,EAAAA,KAAK,EAAG;AADW,CAApB;;AAKA,MAAMC,OAAO,GAAG,CAAEC,KAAK,GAAGH,WAAV,EAAwBI,MAAxB,KAAmC;AAClD;AACA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAmBF,MAAzB;;AACA,UAAQC,IAAR;AACC,SAAK,eAAL;AACC,aAAO,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,KAAK,EAAG,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBK,OAAjB;AAAnB,OAAP;AACA;AACA;AACA;;AACD;AACC,aAAOH,KAAP;AAPF;AASA,CAZD;;AAeA,MAAMI,UAAU,GAAG,MAAM,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AACrD,QAAMC,GAAG,GAAG,8BAAZ;AACA,QAAMT,KAAK,GAAG,MAAMU,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,CAApB;AACAN,EAAAA,QAAQ,CAACO,SAAS,CAACd,KAAD,CAAV,CAAR;AACA,CAJD;;AAOA,eAAeC,OAAf","sourcesContent":["const intialState = {\n\tusers : []\n};\n\n\nconst reducer = ( state = intialState , action) => {\n\t// destructured action object\n\tconst {type, payload } = action;\n\tswitch (type){\n\t\tcase \"FETCHED_USERS\":\n\t\t\treturn {...state, users : [...state.users, payload]};\n\t\t\t// return state, {\n\t\t\t// \t\tusers : payload\n\t\t\t// \t};\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n\nconst fetchUsers = () => async(dispatch, getState) => {\n\tconst url = 'http://localhost:5000/people';\n\tconst users = await fetch(url).then(res => res.json());\n\tdispatch(loadUsers(users));\n};\n\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}