{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux'; // this collects/imports all of the actions that have been exported from 'state/index.js' \n\nimport { actionCreators } from './state/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // can reference state like this to return all key values\n  // const state = useSelector( (state) => state);\n  // console.log(state);\n  //or return state.reducerName eg. 'state.account' to see that value alone returned\n  const bank = useSelector(state => state.bank);\n  const dispatch = useDispatch(); // can call all of the actionCreators like this\n\n  const ActionCreators = bindActionCreators(actionCreators, dispatch); //or can call them in a destructured format\n\n  const {\n    depositMoney,\n    withdrawMoney\n  } = bindActionCreators(actionCreators, dispatch);\n  console.log(ActionCreators);\n  console.log(bank);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", bank, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => depositMoney(100),\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => withdrawMoney(50),\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"p5dom9t0XYi3u5H8F2rNrTpHgvg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/App.js"],"names":["useSelector","useDispatch","bindActionCreators","actionCreators","App","bank","state","dispatch","ActionCreators","depositMoney","withdrawMoney","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEd;AACA;AACA;AAEA;AACA,QAAMC,IAAI,GAAGL,WAAW,CAAGM,KAAD,IAAWA,KAAK,CAACD,IAAnB,CAAxB;AACA,QAAME,QAAQ,GAAGN,WAAW,EAA5B,CARc,CAUd;;AACA,QAAMO,cAAc,GAAGN,kBAAkB,CAACC,cAAD,EAAiBI,QAAjB,CAAzC,CAXc,CAad;;AACA,QAAM;AAAEE,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCR,kBAAkB,CAACC,cAAD,EAAiBI,QAAjB,CAA1D;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC;AAAA,sBAAOA,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AACC,MAAA,OAAO,EAAG,MAAMI,YAAY,CAAC,GAAD,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AACC,MAAA,OAAO,EAAG,MAAMC,aAAa,CAAC,EAAD,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GA/BQN,G;UAOKJ,W,EACIC,W;;;KARTG,G;AAiCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// this collects/imports all of the actions that have been exported from 'state/index.js' \nimport { actionCreators } from './state/index';\n\nfunction App() {\n\n\t// can reference state like this to return all key values\n\t// const state = useSelector( (state) => state);\n\t// console.log(state);\n\n\t//or return state.reducerName eg. 'state.account' to see that value alone returned\n\tconst bank = useSelector( (state) => state.bank );\n\tconst dispatch = useDispatch();\n\n\t// can call all of the actionCreators like this\n\tconst ActionCreators = bindActionCreators(actionCreators, dispatch);\n\n\t//or can call them in a destructured format\n\tconst { depositMoney, withdrawMoney } = bindActionCreators(actionCreators, dispatch);\n\t\n\tconsole.log(ActionCreators);\n\n\tconsole.log(bank);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1> { bank } </h1>\n\t\t\t<button \n\t\t\t\tonClick={ () => depositMoney(100)}\n\t\t\t>Deposit</button>\n\t\t\t<button \n\t\t\t\tonClick={ () => withdrawMoney(50)}\n\t\t\t>Withdraw</button>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}