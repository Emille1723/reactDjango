{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [amount, setAmount] = useState(\"\");\n  const [transaction, setTransaction] = useState(\"\"); // const [deposit, setDeposit] = useState(false);\n  // const [withdraw, setWithdraw] = useState(false);\n\n  const submittedData = {\n    amount: '',\n    transactionType: ''\n  };\n  const {\n    newTransaction\n  } = bindActionCreators(actionCreators, dispatch); // isSelected is a boolean that updates once an account is checked\n\n  const isSelect = useSelector(state => state.user.isSelected); // user state\n\n  const user = useSelector(state => state.user.user);\n\n  const validateSubmit = () => {\n    if (submittedData.transactionType === '') {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleRadios = evt => {\n    submittedData.transactionType = evt.target.value;\n    alert(submittedData.transactionType);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    validateSubmit();\n\n    if (validateForm() === true) {\n      submittedData.amount = amount; // submittedData.transactionType = handleRadios;\n      // formActivity();\n    } else {\n      alert('Unable to process function, ensure that the form is completed');\n    }\n  };\n\n  const formActivity = () => {\n    setAmount('');\n    setTransaction('');\n    alert('submitted'); // newTransaction(submittedData);\n    // dispatch({\n    // \ttype : 'NEW_TRANSACTION',\n    // \tpayload : submittedData\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form--title\",\n      children: \"banking transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), isSelect ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form--selected--user\",\n      children: [\"account selected => \", user.firstName, \" \", user.lastName, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 72\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 78\n      }, this), \"  current balance =>   $\", user.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form--selected--user\",\n      children: \"select an account to continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form--input--wrapper\",\n      name: \"text\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\" // className=\"form--input\"\n        ,\n        className: `form--input`,\n        value: amount,\n        onChange: evt => setAmount(evt.target.value),\n        pattern: \"[0-9]{1,10000}\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form--input--label amount--input--label\",\n        children: \"amount to be tendered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form--input--wrapper\",\n      name: \"radio\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"form--input\",\n        name: \"radios\",\n        id: \"radio--deposit\",\n        value: \"Deposit\",\n        onChange: handleRadios // onChange = {(evt) => setDeposit(evt.target.value)}\n        // onChange = {(evt) => setDeposit(evt.currentTarget.checked)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio--deposit\",\n        className: \"form--input--label\",\n        children: \"deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"form--input\",\n        name: \"radios\",\n        id: \"radio--withdraw\",\n        value: \"Withdraw\",\n        onChange: handleRadios // onChange = {(evt) => setDeposit(evt.target.value)}\n        // onChange = {(evt) => setWithdraw(evt.currentTarget.checked)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radio--withdraw\",\n        className: \"form--input--label\",\n        children: \"withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"form--submit\",\n      value: \"complete transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Form, \"CYpMX+Gay897x1qmDGVc0PL3Yqg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/components/form.js"],"names":["React","useState","useSelector","useDispatch","bindActionCreators","actionCreators","Form","dispatch","amount","setAmount","transaction","setTransaction","submittedData","transactionType","newTransaction","isSelect","state","user","isSelected","validateSubmit","handleRadios","evt","target","value","alert","handleSubmit","preventDefault","validateForm","formActivity","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\n\n\n\n\nconst Form = () => {\n\tconst dispatch = useDispatch();\n\tconst [amount, setAmount] = useState(\"\");\n\tconst [transaction, setTransaction] = useState(\"\");\n\t// const [deposit, setDeposit] = useState(false);\n\t// const [withdraw, setWithdraw] = useState(false);\n\n\tconst submittedData = {\n\t\tamount : '',\n\t\ttransactionType : '',\n\t};\n\n\tconst { newTransaction } = bindActionCreators(actionCreators, dispatch);\n\n\t// isSelected is a boolean that updates once an account is checked\n\tconst isSelect = useSelector( (state) => state.user.isSelected );\n\n\t// user state\n\tconst user = useSelector( (state) => state.user.user );\n\n\n\n\tconst validateSubmit = () => {\n\t\tif(submittedData.transactionType === ''){\n\t\t\treturn false;\n\t\t}\n\t\telse{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\n\tconst handleRadios = evt => {\n\t\tsubmittedData.transactionType = evt.target.value;\n\t\talert(submittedData.transactionType);\n\t}\n\n\n\tconst handleSubmit = evt => {\n\t\tevt.preventDefault();\n\n\t\tvalidateSubmit();\n\t\tif(validateForm() === true){\n\t\t\tsubmittedData.amount = amount;\n\t\t\t// submittedData.transactionType = handleRadios;\n\n\t\t\t\n\t\t\t// formActivity();\n\t\t}\n\t\telse{\n\t\t\talert('Unable to process function, ensure that the form is completed');\n\t\t}\n\t}\n\n\n\tconst formActivity = () => {\n\t\tsetAmount('');\n\t\tsetTransaction('');\n\t\talert('submitted');\n\t\t\n\t\t// newTransaction(submittedData);\n\t\t// dispatch({\n\t\t// \ttype : 'NEW_TRANSACTION',\n\t\t// \tpayload : submittedData\n\t\t// });\n\t}\n\n\treturn (\n\t\t<form className=\"form\" onSubmit={handleSubmit}>\n\t\t\t<span className=\"form--title\">banking transactions</span>\n\t\t\t{isSelect \n\t\t\t?(\t<span className=\"form--selected--user\">\n\t\t\t \t\taccount selected &#61;&gt; { user.firstName\t} {\tuser.lastName }  <br/> <br/>  current balance &#61;&gt;   ${ user.amount }\n\t\t\t\t</span>)\n\t\t\t: (\n\t\t\t\t<span className=\"form--selected--user\">\n\t\t\t \t\tselect an account to continue\n\t\t\t\t</span>\n\t\t\t)};\n\t\t\t<div className=\"form--input--wrapper\" name=\"text\">\n\t\t\t\t<input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t// className=\"form--input\"\n\t\t\t\t\tclassName={`form--input`}\n\t\t\t\t\tvalue = {amount}\n\t\t\t\t\tonChange = { (evt) => setAmount(evt.target.value) } \n\t\t\t\t\tpattern=\"[0-9]{1,10000}\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<label className=\"form--input--label amount--input--label\">amount to be tendered</label>\n\t\t\t</div>\n\t\t\t<div className=\"form--input--wrapper\" name=\"radio\">\n\t\t\t\t<input \n\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\tclassName=\"form--input\"\n\t\t\t\t\tname=\"radios\"\n\t\t\t\t\tid=\"radio--deposit\"\n\t\t\t\t\tvalue = \"Deposit\"\n\t\t\t\t\tonChange = {handleRadios}\n\t\t\t\t\t// onChange = {(evt) => setDeposit(evt.target.value)}\n\t\t\t\t\t// onChange = {(evt) => setDeposit(evt.currentTarget.checked)}\n\t\t\t\t/>\n\t\t\t\t<label \n\t\t\t\t\thtmlFor=\"radio--deposit\" \n\t\t\t\t\tclassName=\"form--input--label\">deposit</label>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\tclassName=\"form--input\" \n\t\t\t\t\tname=\"radios\"\n\t\t\t\t\tid=\"radio--withdraw\"\n\t\t\t\t\tvalue = \"Withdraw\"\n\t\t\t\t\tonChange = {handleRadios}\n\t\t\t\t\t// onChange = {(evt) => setDeposit(evt.target.value)}\n\t\t\t\t\t// onChange = {(evt) => setWithdraw(evt.currentTarget.checked)}\n\t\t\t\t/>\n\t\t\t\t<label \n\t\t\t\t\thtmlFor=\"radio--withdraw\" \n\t\t\t\t\tclassName=\"form--input--label\">withdraw</label>\n\t\t\t</div>\n\t\t\t<input type=\"submit\" className=\"form--submit\" value=\"complete transaction\"/>\n\t\t</form>\n\t)\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}