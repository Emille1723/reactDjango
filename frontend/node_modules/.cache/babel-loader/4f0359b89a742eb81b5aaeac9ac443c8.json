{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux'; // allows ajax requests on the fly\n// import Axios from 'axios';\n// this collects/imports all of the actions that have been exported from 'state/index.js' \n\nimport { actionCreators } from './state/index';\nimport AppWrapper from './components/appWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const fetchUsers = async () => {\n  // \tconst res = await fetch('https://reqres.in/api/users?page=2');\n  // \tconst data = await res.json();\n  // \tconst d = data.data;\n  // }\n  const fetchUsers = () => {\n    fetch('https://reqres.in/api/users/2').then(res => res.json()).then(data => console.log(data.data));\n  }; // can reference state like this to return all key values\n  // const state = useSelector( (state) => state);\n  // console.log(state);\n  //or return state.reducerName eg. 'state.account' to see that value alone returned\n\n\n  const bank = useSelector(state => state.bank);\n  const dispatch = useDispatch(); // can call all of the actionCreators like this\n\n  const ActionCreators = bindActionCreators(actionCreators, dispatch); //or can call them in a destructured format\n\n  const {\n    depositMoney,\n    withdrawMoney\n  } = bindActionCreators(actionCreators, dispatch);\n  console.log(ActionCreators);\n  console.log(bank);\n  fetchUsers();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AppWrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"p5dom9t0XYi3u5H8F2rNrTpHgvg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/App.js"],"names":["useSelector","useDispatch","bindActionCreators","actionCreators","AppWrapper","App","fetchUsers","fetch","then","res","json","data","console","log","bank","state","dispatch","ActionCreators","depositMoney","withdrawMoney"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;AACA;AAEA;;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEd;AACA;AACA;AACA;AAEA;AAEA,QAAMC,UAAU,GAAG,MAAM;AACxBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB,CAFd;AAGA,GAJD,CATc,CAed;AACA;AACA;AAEA;;;AACA,QAAMG,IAAI,GAAGd,WAAW,CAAGe,KAAD,IAAWA,KAAK,CAACD,IAAnB,CAAxB;AACA,QAAME,QAAQ,GAAGf,WAAW,EAA5B,CArBc,CAuBd;;AACA,QAAMgB,cAAc,GAAGf,kBAAkB,CAACC,cAAD,EAAiBa,QAAjB,CAAzC,CAxBc,CA0Bd;;AACA,QAAM;AAAEE,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCjB,kBAAkB,CAACC,cAAD,EAAiBa,QAAjB,CAA1D;AAEAJ,EAAAA,OAAO,CAACC,GAAR,CAAYI,cAAZ;AAEAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEAR,EAAAA,UAAU;AAEV,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;GAxCQD,G;UAoBKL,W,EACIC,W;;;KArBTI,G;AA0CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// allows ajax requests on the fly\n// import Axios from 'axios';\n\n// this collects/imports all of the actions that have been exported from 'state/index.js' \nimport { actionCreators } from './state/index';\n\n\nimport AppWrapper from './components/appWrapper';\n\nfunction App() {\n\n\t// const fetchUsers = async () => {\n\t// \tconst res = await fetch('https://reqres.in/api/users?page=2');\n\t// \tconst data = await res.json();\n\t// \tconst d = data.data;\n\n\t// }\n\n\tconst fetchUsers = () => {\n\t\tfetch('https://reqres.in/api/users/2')\n\t\t.then(res => res.json())\n\t\t.then(data => console.log(data.data));\n\t}\n\n\t// can reference state like this to return all key values\n\t// const state = useSelector( (state) => state);\n\t// console.log(state);\n\n\t//or return state.reducerName eg. 'state.account' to see that value alone returned\n\tconst bank = useSelector( (state) => state.bank );\n\tconst dispatch = useDispatch();\n\n\t// can call all of the actionCreators like this\n\tconst ActionCreators = bindActionCreators(actionCreators, dispatch);\n\n\t//or can call them in a destructured format\n\tconst { depositMoney, withdrawMoney } = bindActionCreators(actionCreators, dispatch);\n\t\n\tconsole.log(ActionCreators);\n\n\tconsole.log(bank);\n\n\tfetchUsers();\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AppWrapper />\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}