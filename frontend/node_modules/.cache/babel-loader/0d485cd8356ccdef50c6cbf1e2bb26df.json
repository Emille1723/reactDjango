{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/components/usersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersList = () => {\n  _s();\n\n  const colours = [{\n    id: 0,\n    colour: '#ff8a80'\n  }, {\n    id: 1,\n    colour: '#26a69a'\n  }, {\n    id: 2,\n    colour: '#ab47bc'\n  }, {\n    id: 3,\n    colour: '#9575cd'\n  }, {\n    id: 4,\n    colour: '#03a9f4'\n  }, {\n    id: 5,\n    colour: '#607d8b'\n  }]; // useEffect = \n\n  const dispatch = useDispatch(); // setting up actionCreators to fetchusers and update global state instead of typing i tlong way\n  // const ActionCreators = bindActionCreators(actionCreators, dispatch);\n\n  const {\n    fetchUsers,\n    loadUsers\n  } = bindActionCreators(actionCreators, dispatch);\n  useEffect(() => {\n    const getUsers = async () => {\n      const usersfromserver = await fetchUsers();\n    };\n\n    getUsers();\n  }, []);\n  const users = useSelector(state => state.users.users);\n  console.log('userList component => ', users);\n\n  const userSelect = id => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userList--title\",\n      children: \"users listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userList--item--wrapper\",\n      children: users.map((user, i) =>\n      /*#__PURE__*/\n      // <>\n      _jsxDEV(\"label\", {\n        htmlFor: \"\",\n        className: \"userList--item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userList--item--image\",\n          style: {\n            borderColor: colours[i].colour\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userList--item--name\",\n          children: [user.firstName, \" \", user.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userList--item--amount\",\n          children: [\"$\", user.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userList--item--lastWorked\",\n          children: [\"last worked => \", user.lastWorked]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"userList--item--select\",\n          onClick: userSelect(user.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 8\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this) //</>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UsersList, \"BS7bVd8xaVNZdIWuKRUCDf4R6os=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/components/usersList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","bindActionCreators","actionCreators","UsersList","colours","id","colour","dispatch","fetchUsers","loadUsers","getUsers","usersfromserver","users","state","console","log","userSelect","map","user","i","borderColor","firstName","lastName","amount","lastWorked"],"mappings":"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","sourcesContent":["import React, {\tuseState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\n\nconst UsersList = () => {\n\n\t\n\n\tconst colours = [\n        {\n            id:0,\n            colour : '#ff8a80'\n        },\n        {\n            id:1,\n            colour : '#26a69a'\n        },\n        {\n            id:2,\n            colour : '#ab47bc'\n        },\n        {\n            id:3,\n            colour : '#9575cd'\n        },\n        {\n            id:4,\n            colour : '#03a9f4'\n        },\n        {\n            id:5,\n            colour : '#607d8b'\n        },\n    ];\n\t\n\t// useEffect = \n\tconst dispatch = useDispatch();\n\t// setting up actionCreators to fetchusers and update global state instead of typing i tlong way\n\t// const ActionCreators = bindActionCreators(actionCreators, dispatch);\n\tconst { fetchUsers, loadUsers } = bindActionCreators(actionCreators, dispatch);\n\n\tuseEffect(() => {\n        const getUsers  = async () => {\n            const usersfromserver = await fetchUsers();\n        }\n        getUsers();\n    }, []);\n\n\tconst users = useSelector(\t(state) => state.users.users);\n\tconsole.log('userList component => ', users);\n\n\n\tconst userSelect = (id) => {\n\t\t\n\t}\n\treturn (\n\t\t<div className = \"userList\">\n\t\t\t<span className=\"userList--title\">users listing</span>\n\t\t\t<div className=\"userList--item--wrapper\">\n\t\t\t\t{ users.map((user, i) => (\n\t\t\t\t\t// <>\n\t\t\t\t\t\t<label htmlFor=\"\" className=\"userList--item\" key={user.id}>\n\t\t\t\t\t\t\t<span className=\"userList--item--image\" style={{borderColor:colours[i].colour}}>\n\t\t\t\t\t\t\t\t<i></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"userList--item--name\">\n\t\t\t\t\t\t\t\t{user.firstName} {user.lastName}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"userList--item--amount\">\n\t\t\t\t\t\t\t\t${user.amount}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"userList--item--lastWorked\">\n\t\t\t\t\t\t\t\tlast worked => {user.lastWorked}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<button className=\"userList--item--select\" onClick={userSelect(user.id)}></button>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t//</>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}