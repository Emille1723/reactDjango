{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/components/usersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersList = () => {\n  _s();\n\n  // useEffect = \n  const dispatch = useDispatch(); // setting up actionCreators to fetchusers and update global state instead of typing i tlong way\n  // const ActionCreators = bindActionCreators(actionCreators, dispatch);\n\n  const {\n    selectUser,\n    fetchUsers,\n    fetchTransactions\n  } = bindActionCreators(actionCreators, dispatch);\n  useEffect(() => {\n    const getUsers = async () => {\n      const usersfromserver = await fetchUsers();\n    };\n\n    getUsers();\n  }, []); // fetch userid collected from checked radio button\n\n  const fetchUser = async (id, dispatch) => {\n    const res = await fetch(`http://localhost:5000/people/${id}`);\n    const user = await res.json();\n    selectUser(user);\n    fetchTransactions(user.transactions);\n  }; // handle radio checked event to select user \n\n\n  const handleChange = evt => {\n    const {\n      id\n    } = evt.target;\n    fetchUser(id);\n  }; // grab colours state\n\n\n  const colours = useSelector(state => state.colours.colours); // grab users state\n\n  const users = useSelector(state => state.users.users);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userList--title\",\n      children: \"users listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userList--item--wrapper\",\n      children: users.map((user, i) => {\n        // normally after the '=>' function uses '()' but can use '{}' to add JS code and functionality \n        // console.log(user.transactions);\n\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"userList--radios\",\n            id: user.id,\n            type: \"radio\",\n            name: \"radios\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: user.id,\n            className: \"userList--item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"userList--item--image\",\n              style: {\n                borderColor: colours[i].colour\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"userList--item--name\",\n              children: [user.firstName, \" \", user.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"userList--item--amount\",\n              children: [\"$\", user.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"userList--item--lastWorked\",\n              children: [\"last worked => \", user.lastWorked]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"userList--item--selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UsersList, \"pSUkfY8hrj2VdKOdBGO9wgKLN5I=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/components/usersList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","bindActionCreators","actionCreators","UsersList","dispatch","selectUser","fetchUsers","fetchTransactions","getUsers","usersfromserver","fetchUser","id","res","fetch","user","json","transactions","handleChange","evt","target","colours","state","users","map","i","borderColor","colour","firstName","lastName","amount","lastWorked"],"mappings":"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","sourcesContent":["import React, {\tuseState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\n\nconst UsersList = () => {\n\t\n\t// useEffect = \n\tconst dispatch = useDispatch();\n\t// setting up actionCreators to fetchusers and update global state instead of typing i tlong way\n\t// const ActionCreators = bindActionCreators(actionCreators, dispatch);\n\tconst { selectUser, fetchUsers, fetchTransactions } = bindActionCreators(actionCreators, dispatch);\n\n\tuseEffect(() => {\n        const getUsers  = async () => {\n            const usersfromserver = await fetchUsers();\n        }\n        getUsers();\n    }, []);\n\n\n\t// fetch userid collected from checked radio button\n\tconst fetchUser = async (id, dispatch) => {\n\t\tconst res = await fetch(`http://localhost:5000/people/${id}`);\n\t\tconst user = await res.json();\n\t\tselectUser(user);\n\t\tfetchTransactions(user.transactions);\n\t}\n\n\t// handle radio checked event to select user \n\tconst handleChange = (evt) => {\n\t\tconst { id } = evt.target;\n\t\tfetchUser(id);\n\t}\n\n\n\t// grab colours state\n\tconst colours = useSelector( (state) => state.colours.colours );\n\t// grab users state\n\tconst users = useSelector(\t(state) => state.users.users );\n\n\n\t\n\treturn (\n\t\t<div className = \"userList\">\n\t\t\t<span className=\"userList--title\">users listing</span>\n\t\t\t<div className=\"userList--item--wrapper\">\n\t\t\t\t{ users.map((user,i) => {\n\t\t\t\t\t// normally after the '=>' function uses '()' but can use '{}' to add JS code and functionality \n\t\t\t\t\t// console.log(user.transactions);\n\t\t\t\t\t<div key={user.id}>\n\t\t\t\t\t\t<input className=\"userList--radios\"  \n\t\t\t\t\t\t\tid = {user.id} \n\t\t\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\t\t\tname=\"radios\"\n\t\t\t\t\t\t\tonChange = { handleChange }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor={user.id} className=\"userList--item\">\n\t\t\t\t\t\t\t<span className=\"userList--item--image\" style={{borderColor:colours[i].colour}}>\n\t\t\t\t\t\t\t\t<i></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"userList--item--name\">\n\t\t\t\t\t\t\t\t{user.firstName} {user.lastName}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"userList--item--amount\">\n\t\t\t\t\t\t\t\t${user.amount}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"userList--item--lastWorked\">\n\t\t\t\t\t\t\t\tlast worked &#61;&gt; {user.lastWorked}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<i className=\"userList--item--selected\"></i>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}