{"ast":null,"code":"var _jsxFileName = \"/home/emilleh/projects/React/github/react-redux/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport uuid from 'react-uuid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux'; // allows ajax requests on the fly\n// import Axios from 'axios';\n// this collects/imports all of the actions that have been exported from 'state/index.js' \n\nimport { actionCreators } from './state/index';\nimport AppWrapper from './components/appWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // can reference state like this to return all key values\n  // const state = useSelector( (state) => state);\n  // console.log(state);\n  //or return state.reducerName eg. 'state.account' to see that value alone returned\n  const form = useSelector(state => state.form);\n  const bank = useSelector(state => state.bank);\n  const users = useSelector(state => state.users); // console.log('rendered : form => ', form, '\\n bank => ', bank, '\\n users => ', users);\n\n  const dispatch = useDispatch(); // can call all of the actionCreators like this\n\n  const ActionCreators = bindActionCreators(actionCreators, dispatch); //or can call them in a destructured format\n\n  const {\n    newTransaction,\n    depositMoney,\n    withdrawMoney\n  } = bindActionCreators(actionCreators, dispatch); // useEffect( () => {\n  // \tconst getTasks  = async () => {\n  //         const tasksfromserver = await getUsers();\n  //         fetchUsers(tasksfromserver);\n  //     }\n  // \tgetTasks();\n  // });\n  //fetch data from database\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AppWrapper, {}, uuid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, uuid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"sYOk9GrQ/SdGZ+LybBym+cU638M=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/emilleh/projects/React/github/react-redux/src/App.js"],"names":["useEffect","useState","uuid","useSelector","useDispatch","bindActionCreators","actionCreators","AppWrapper","App","form","state","bank","users","dispatch","ActionCreators","newTransaction","depositMoney","withdrawMoney"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;AACA;AAEA;;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAGd;AACA;AACA;AAEA;AACA,QAAMC,IAAI,GAAGN,WAAW,CAAGO,KAAD,IAAWA,KAAK,CAACD,IAAnB,CAAxB;AACA,QAAME,IAAI,GAAGR,WAAW,CAAGO,KAAD,IAAWA,KAAK,CAACC,IAAnB,CAAxB;AACA,QAAMC,KAAK,GAAGT,WAAW,CAAGO,KAAD,IAAWA,KAAK,CAACE,KAAnB,CAAzB,CAVc,CAWd;;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B,CAZc,CAcd;;AACA,QAAMU,cAAc,GAAGT,kBAAkB,CAACC,cAAD,EAAiBO,QAAjB,CAAzC,CAfc,CAkBd;;AACA,QAAM;AAACE,IAAAA,cAAD;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA;AAA/B,MAAiDZ,kBAAkB,CAACC,cAAD,EAAiBO,QAAjB,CAAzE,CAnBc,CAuBd;AACA;AACG;AACA;AACA;AACH;AACA;AAEG;;AAIH,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC,QAAC,UAAD,MAAiBX,IAAI,EAArB;AAAA;AAAA;AAAA;AAAA;AADD,KAA0BA,IAAI,EAA9B;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;GAxCQM,G;UAQKL,W,EACAA,W,EACCA,W,EAEGC,W;;;KAZTI,G;AA0CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport uuid from 'react-uuid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// allows ajax requests on the fly\n// import Axios from 'axios';\n\n// this collects/imports all of the actions that have been exported from 'state/index.js' \nimport { actionCreators } from './state/index';\n\n\nimport AppWrapper from './components/appWrapper';\n\nfunction App() {\n\n\n\t// can reference state like this to return all key values\n\t// const state = useSelector( (state) => state);\n\t// console.log(state);\n\n\t//or return state.reducerName eg. 'state.account' to see that value alone returned\n\tconst form = useSelector( (state) => state.form );\n\tconst bank = useSelector( (state) => state.bank );\n\tconst users = useSelector(\t(state) => state.users );\n\t// console.log('rendered : form => ', form, '\\n bank => ', bank, '\\n users => ', users);\n\tconst dispatch = useDispatch();\n\n\t// can call all of the actionCreators like this\n\tconst ActionCreators = bindActionCreators(actionCreators, dispatch);\n\n\n\t//or can call them in a destructured format\n\tconst {newTransaction, depositMoney, withdrawMoney } = bindActionCreators(actionCreators, dispatch);\n\n\n\n\t// useEffect( () => {\n\t// \tconst getTasks  = async () => {\n    //         const tasksfromserver = await getUsers();\n    //         fetchUsers(tasksfromserver);\n    //     }\n\t// \tgetTasks();\n\t// });\n\n    //fetch data from database\n\n\t\n\n\treturn (\n\t\t<div className=\"App\" key={uuid()}>\n\t\t\t<AppWrapper key={uuid()}/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}